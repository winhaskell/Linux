https://cmdchallenge.com/

You are off to a great start, keep on going!
Test against random data failed - try again

# You have a new challenge!

# Print "hello world".
# Hint: There are many ways to print text on
# the command line, one way is with the 'echo'
# command.
# 
# Try it below and good luck!
# 
# You have a new challenge!
# Print the current working directory.
# 
# You have a new challenge!
# Print "hello world".
# Hint: There are many ways to print text on
# the command line, one way is with the 'echo'
# command.
# 
# Try it below and good luck!
# 
bash(0)> pwd
/var/challenges/hello_world
bash(0)> ls
README
bash(0)> echo  "hello world".
hello world.
bash(0)> echo ""hello world"."
hello world.
bash(0)> console.log('hello world!');
-c: line 0: syntax error near unexpected token `'hello world!''
bash: -c: line 0: `export MANPAGER=cat;console.log('hello world!');'
bash(1)> touch helloworld && echo "hello world" > helloworld && cat helloworld
hello world
# 👍 👍 👍  Correct!
# You have a new challenge!
# Print the current working directory.
# 
bash(0)> pwd
/var/challenges/current_working_directory
# 👍 👍 👍  Correct!
# You have a new challenge!
# List names of all the files in the current
# directory, one file per line.
# 
bash(0)> ls -al
total 24
drwxr-xr-x.  2 501 dialout 4096 Jan 29 20:50 .
drwxr-xr-x. 39 501 dialout 4096 Apr 18 19:04 ..
-rw-r--r--.  1 501 dialout  107 Apr 29 17:44 README
bash(0)> ls -a
.
..
README
bash(0)> ls -a
.
..
README
bash(0)> 
bash(0)> echo "hello world"
hello world
# 👍 👍 👍  Correct!


# You have a new challenge!
# List names of all the files in the current
# directory, one file per line.
bash(0)> ls
README
# 👍 👍 👍  Correct!


# You have a new challenge!
# There is a file named "access.log" in the
# current directory. Print the contents.
# 
bash(0)> 
 
 bash(0)> ls -alt
total 24
-rw-r--r--.  1 501 dialout  107 May  3 20:32 README
drwxr-xr-x. 39 501 dialout 4096 Apr 18 19:04 ..
drwxr-xr-x.  2 501 dialout 4096 Jan 29 20:50 .
bash(0)> ls
README
# 👍 👍 👍  Correct!



# You have a new challenge!
# There is a file named "access.log" in the
# current directory. Print the contents.
# 
bash(0)> pwd
/var/challenges/print_file_contents
bash(0)> ls
README
access.log
bash(0)> cat access.log
163.56.115.58 - - [09/Jan/2017:22:29:57 +0100] "GET /posts/2/display HTTP/1.0" 200 3240
75.113.188.234 - - [09/Jan/2017:22:30:43 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 1116
69.16.40.148 - - [09/Jan/2017:22:34:33 +0100] "GET /pages/create HTTP/1.0" 500 3471
225.219.54.140 - - [09/Jan/2017:22:35:30 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 500 2477
207.243.19.2 - - [09/Jan/2017:22:38:03 +0100] "GET /bar/create HTTP/1.0" 200 1116
199.37.62.156 - - [09/Jan/2017:22:42:18 +0100] "GET /posts/1/display HTTP/1.0" 200 2477
55.74.240.123 - - [09/Jan/2017:22:44:25 +0100] "POST /posts/1/display HTTP/1.0" 200 3471
251.111.109.143 - - [09/Jan/2017:22:49:02 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 2477
101.163.230.250 - - [09/Jan/2017:22:52:31 +0100] "DELETE /posts/2/display HTTP/1.0" 404 2477
200.19.168.148 - - [09/Jan/2017:22:57:11 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 3471
# 👍 👍 👍  Correct!



# You have a new challenge!
# Print the last 5 lines of "access.log".

bash(0)> cat access.log
163.56.115.58 - - [09/Jan/2017:22:29:57 +0100] "GET /posts/2/display HTTP/1.0" 200 3240
75.113.188.234 - - [09/Jan/2017:22:30:43 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 1116
69.16.40.148 - - [09/Jan/2017:22:34:33 +0100] "GET /pages/create HTTP/1.0" 500 3471
225.219.54.140 - - [09/Jan/2017:22:35:30 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 500 2477
207.243.19.2 - - [09/Jan/2017:22:38:03 +0100] "GET /bar/create HTTP/1.0" 200 1116
199.37.62.156 - - [09/Jan/2017:22:42:18 +0100] "GET /posts/1/display HTTP/1.0" 200 2477
55.74.240.123 - - [09/Jan/2017:22:44:25 +0100] "POST /posts/1/display HTTP/1.0" 200 3471
251.111.109.143 - - [09/Jan/2017:22:49:02 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 2477
101.163.230.250 - - [09/Jan/2017:22:52:31 +0100] "DELETE /posts/2/display HTTP/1.0" 404 2477
200.19.168.148 - - [09/Jan/2017:22:57:11 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 3471
 

bash(1)> ail -n 5 ./*.aff(D.om[1])
-c: line 0: syntax error near unexpected token `('
bash: -c: line 0: `export MANPAGER=cat;ail -n 5 ./*.aff(D.om[1])'
bash(1)> ail -n 5 
ail: command not found
bash(127)> last -n 5 |awk '{print $1 "\t" $3}'
    
wtmp    Sun
bash(0)> last -n 5 |awk '{cat access.log}'
awk: 1: unexpected character '.'
bash(2)> last -n 5 |awk cat access.log
bash(0)> last -n 5 cat access.log
wtmp begins Sun Nov 25 04:33:52 2018
 
bash(0)> sed -n '5,10p' access.log
207.243.19.2 - - [09/Jan/2017:22:38:03 +0100] "GET /bar/create HTTP/1.0" 200 1116
199.37.62.156 - - [09/Jan/2017:22:42:18 +0100] "GET /posts/1/display HTTP/1.0" 200 2477
55.74.240.123 - - [09/Jan/2017:22:44:25 +0100] "POST /posts/1/display HTTP/1.0" 200 3471
251.111.109.143 - - [09/Jan/2017:22:49:02 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 2477
101.163.230.250 - - [09/Jan/2017:22:52:31 +0100] "DELETE /posts/2/display HTTP/1.0" 404 2477
200.19.168.148 - - [09/Jan/2017:22:57:11 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 3471

bash(0)> sed -n '6,10p' access.log
199.37.62.156 - - [09/Jan/2017:22:42:18 +0100] "GET /posts/1/display HTTP/1.0" 200 2477
55.74.240.123 - - [09/Jan/2017:22:44:25 +0100] "POST /posts/1/display HTTP/1.0" 200 3471
251.111.109.143 - - [09/Jan/2017:22:49:02 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 2477
101.163.230.250 - - [09/Jan/2017:22:52:31 +0100] "DELETE /posts/2/display HTTP/1.0" 404 2477
200.19.168.148 - - [09/Jan/2017:22:57:11 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 3471
# 👍 👍 👍  Correct!

bash(0)> cat access.log | tail -n 5
199.37.62.156 - - [09/Jan/2017:22:42:18 +0100] "GET /posts/1/display HTTP/1.0" 200 2477
55.74.240.123 - - [09/Jan/2017:22:44:25 +0100] "POST /posts/1/display HTTP/1.0" 200 3471
251.111.109.143 - - [09/Jan/2017:22:49:02 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 2477
101.163.230.250 - - [09/Jan/2017:22:52:31 +0100] "DELETE /posts/2/display HTTP/1.0" 404 2477
200.19.168.148 - - [09/Jan/2017:22:57:11 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 3471
# 👍 👍 👍  Correct!


# You have a new challenge!
# There is a file named "access.log" in the
# current working directory. Print all lines
# in this file that contains the string "GET".
# 
bash(0)> 



tail -n 100：显示最后100行
tail -n +100：从100行开始显示，显示100行以后的
head -n 99：显示前面99行

 sed命令
 sed -n '6,99p' filename 这样你就可以只查看文件的第6行到第99行。
 
 
 https://www.centos.bz/2011/09/linux-egrep/
 https://www.ibm.com/support/knowledgecenter/zh/ssw_aix_71/com.ibm.aix.osdevice/HT_cmd_findtextstrings.htm
 
bash(0)> cat access.log
163.56.115.58 - - [09/Jan/2017:22:29:57 +0100] "GET /posts/2/display HTTP/1.0" 200 3240
75.113.188.234 - - [09/Jan/2017:22:30:43 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 1116
69.16.40.148 - - [09/Jan/2017:22:34:33 +0100] "GET /pages/create HTTP/1.0" 500 3471
225.219.54.140 - - [09/Jan/2017:22:35:30 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 500 2477
207.243.19.2 - - [09/Jan/2017:22:38:03 +0100] "GET /bar/create HTTP/1.0" 200 1116
199.37.62.156 - - [09/Jan/2017:22:42:18 +0100] "GET /posts/1/display HTTP/1.0" 200 2477
55.74.240.123 - - [09/Jan/2017:22:44:25 +0100] "POST /posts/1/display HTTP/1.0" 200 3471
251.111.109.143 - - [09/Jan/2017:22:49:02 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 2477
101.163.230.250 - - [09/Jan/2017:22:52:31 +0100] "DELETE /posts/2/display HTTP/1.0" 404 2477
200.19.168.148 - - [09/Jan/2017:22:57:11 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 3471

bash(0)> grep –w "GET"
grep: GET: No such file or directory
bash(2)> ls -l | grep staff
bash(1)> ls -l | grep GET

bash(1)> cat access.log
163.56.115.58 - - [09/Jan/2017:22:29:57 +0100] "GET /posts/2/display HTTP/1.0" 200 3240
75.113.188.234 - - [09/Jan/2017:22:30:43 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 1116
69.16.40.148 - - [09/Jan/2017:22:34:33 +0100] "GET /pages/create HTTP/1.0" 500 3471
225.219.54.140 - - [09/Jan/2017:22:35:30 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 500 2477
207.243.19.2 - - [09/Jan/2017:22:38:03 +0100] "GET /bar/create HTTP/1.0" 200 1116
199.37.62.156 - - [09/Jan/2017:22:42:18 +0100] "GET /posts/1/display HTTP/1.0" 200 2477
55.74.240.123 - - [09/Jan/2017:22:44:25 +0100] "POST /posts/1/display HTTP/1.0" 200 3471
251.111.109.143 - - [09/Jan/2017:22:49:02 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 2477
101.163.230.250 - - [09/Jan/2017:22:52:31 +0100] "DELETE /posts/2/display HTTP/1.0" 404 2477
200.19.168.148 - - [09/Jan/2017:22:57:11 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 3471

bash(0)> ls -l | grep GET

bash(1)> grep -i "GET" access.log
163.56.115.58 - - [09/Jan/2017:22:29:57 +0100] "GET /posts/2/display HTTP/1.0" 200 3240
75.113.188.234 - - [09/Jan/2017:22:30:43 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 1116
69.16.40.148 - - [09/Jan/2017:22:34:33 +0100] "GET /pages/create HTTP/1.0" 500 3471
225.219.54.140 - - [09/Jan/2017:22:35:30 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 500 2477
207.243.19.2 - - [09/Jan/2017:22:38:03 +0100] "GET /bar/create HTTP/1.0" 200 1116
199.37.62.156 - - [09/Jan/2017:22:42:18 +0100] "GET /posts/1/display HTTP/1.0" 200 2477
251.111.109.143 - - [09/Jan/2017:22:49:02 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 2477
200.19.168.148 - - [09/Jan/2017:22:57:11 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 3471
# 👍 👍 👍  Correct!
# You have a new challenge!



bash(0)> grep GET access.log
163.56.115.58 - - [09/Jan/2017:22:29:57 +0100] "GET /posts/2/display HTTP/1.0" 200 3240
75.113.188.234 - - [09/Jan/2017:22:30:43 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 1116
69.16.40.148 - - [09/Jan/2017:22:34:33 +0100] "GET /pages/create HTTP/1.0" 500 3471
225.219.54.140 - - [09/Jan/2017:22:35:30 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 500 2477
207.243.19.2 - - [09/Jan/2017:22:38:03 +0100] "GET /bar/create HTTP/1.0" 200 1116
199.37.62.156 - - [09/Jan/2017:22:42:18 +0100] "GET /posts/1/display HTTP/1.0" 200 2477
251.111.109.143 - - [09/Jan/2017:22:49:02 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 2477
200.19.168.148 - - [09/Jan/2017:22:57:11 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 3471
# 👍 👍 👍  Correct!
# You have a new challenge!


# Print all files in the current directory,
# one per line (not the path, just the filename)
# that contain the string "500".
# 
bash(0)> grep -rl * -e 500
README
access.log
access.log.1
# 👍 👍 👍  Correct!
 
 


bash(0)> cat access.log
163.56.115.58 - - [09/Jan/2017:22:29:57 +0100] "GET /posts/2/display HTTP/1.0" 200 3240
75.113.188.234 - - [09/Jan/2017:22:30:43 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 1116
69.16.40.148 - - [09/Jan/2017:22:34:33 +0100] "GET /pages/create HTTP/1.0" 500 3471
225.219.54.140 - - [09/Jan/2017:22:35:30 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 500 2477
207.243.19.2 - - [09/Jan/2017:22:38:03 +0100] "GET /bar/create HTTP/1.0" 200 1116
199.37.62.156 - - [09/Jan/2017:22:42:18 +0100] "GET /posts/1/display HTTP/1.0" 200 2477
55.74.240.123 - - [09/Jan/2017:22:44:25 +0100] "POST /posts/1/display HTTP/1.0" 200 3471
251.111.109.143 - - [09/Jan/2017:22:49:02 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 2477
101.163.230.250 - - [09/Jan/2017:22:52:31 +0100] "DELETE /posts/2/display HTTP/1.0" 404 2477
200.19.168.148 - - [09/Jan/2017:22:57:11 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 3471

bash(0)> cat access.log1
cat: access.log1: No such file or directory
 
bash(127)> cat README
# Search For Files Containing String
# **********************************
# Print all files in the current directory,
# one per line (not the path, just the filename)
# that contain the string "500".
#
bash(0)> 
 
 
 
# You have a new challenge!
# Print the relative file paths, one path
# per line for all filenames that start with
# "access.log" in the current directory.
bash(0)> find . -name "access.log*" 
./access.log.2
./access.log
./access.log.1
# 👍 👍 👍  Correct!


# You have a new challenge!
# Print all matching lines (without the filename
# or the file path) in all files under the current
# directory that start with "access.log" that
# contain the string "500". Note that there are no
# files named "access.log" in the current directory,
# you will need to search recursively.

bash(0)> find . -name "access.log*" | xargs grep -h 500
69.16.40.148 - - [09/Jan/2017:22:34:33 +0100] "GET /pages/create HTTP/1.0" 500 3471
225.219.54.140 - - [09/Jan/2017:22:35:30 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 500 2477
2.71.250.27 - - [09/Jan/2017:22:41:26 +0100] "GET /pages/create HTTP/1.0" 500 2477
# 👍 👍 👍  Correct!

 On your way to becoming a super-duper commandline hacker.
 
 
# You have a new challenge!
# Extract all IP addresses from files
# that start with "access.log" printing one
# IP address per line.
 
bash(0)> find . -name "access.log*" | xargs grep -Eo '^[^ ]+' 

./var/log/httpd/access.log:163.56.115.58
./var/log/httpd/access.log:75.113.188.234
./var/log/httpd/access.log:69.16.40.148
./var/log/httpd/access.log:225.219.54.140
./var/log/httpd/access.log:207.243.19.2
./var/log/httpd/access.log:199.37.62.156
./var/log/httpd/access.log:55.74.240.123
./var/log/httpd/access.log:251.111.109.143
./var/log/httpd/access.log:101.163.230.250
./var/log/httpd/access.log:200.19.168.148
./var/log/httpd/access.log.1:108.68.174.15
./var/log/httpd/access.log.1:17.2.20.139
./var/log/httpd/access.log.1:28.151.137.59
./var/log/httpd/access.log.1:199.150.241.179
./var/log/httpd/access.log.1:2.71.250.27
./var/log/httpd/access.log.1:17.137.186.194
./var/log/httpd/access.log.1:151.84.119.34
./var/log/httpd/access.log.1:4.180.204.195
./var/log/httpd/access.log.1:9.230.96.54
./var/log/httpd/access.log.1:157.143.233.21
# 👍 👍 👍  Correct!
On your way to becoming a super-duper commandline hacker.


# You have a new challenge!
# Delete all of the files in this challenge
# directory including all subdirectories and
# their contents.
# 
bash(0)> pwd
/var/challenges/delete_files

bash(0)> ls
README
animi.doc
atque.wav
aut.webm
beatae.flac
blanditiis.avi
consectetur.pdf
consequuntur.jpeg
corporis.xls
deleniti.gif
dicta.wav
dignissimos.css
dignissimos.jpg
dolor.doc
dolorem.doc
dolorem.xls
dolorum.wav
error.wav
excepturi.png
exercitationem.mp3
expedita.jpeg
expedita.xls
hic.xls
id.txt
ipsa.xls
iusto.gif
libero.xls
maxime.mp3
mollitia.odt
necessitatibus.css
nisi.avi
non.gif
numquam.xls
odit.doc
omnis.txt
perspiciatis.mov
provident.avi
quia.jpg
quidem.wav
saepe.doc
sit.avi
suscipit.wav
temporibus.doc
totam.avi
var
voluptates.wav
voluptates.xls

bash(0)> find . -delete
# 👍 👍 👍  Correct!


# You have a new challenge!
# Count the number of files in the current
# working directory. Print the number of
# files as a single integer.
# 
bash(0)> 

 bash(0)> ls 
README
access.log
bash(0)> ls | wc -l 
2
# You have a new challenge!
# Delete all of the files in this challenge
# directory including all subdirectories and
# their contents.
# 
# You have a new challenge!
# Count the number of files in the current
# working directory. Print the number of
# files as a single integer.
# 
bash(0)> ls | wc -l
2
bash(0)> pwd
/var/challenges/count_files
bash(0)> ls
README
access.log
bash(0)> ls | wc -l 
2
bash(0)> pwd
/var/challenges/count_files
bash(0)> ls | wc -l
2
bash(0)> ls
README
access.log
bash(0)> ls -alt
total 40
-rw-r--r--.  1 501 dialout  145 Jun 29 18:59 README
drwxr-xr-x.  2 501 dialout 4096 Jun 29 18:32 .
-rw-r--r--.  1 501 dialout   27 Jun 29 18:32 .hidden
-rw-r--r--.  1 501 dialout  901 Jun 29 18:30 access.log
drwxr-xr-x. 42 501 dialout 4096 Jun 29 17:30 ..
bash(0)> ls | wc -l
2
bash(0)> sort access.log
101.163.230.250 - - [09/Jan/2017:22:52:31 +0100] "DELETE /posts/2/display HTTP/1.0" 404 2477
163.56.115.58 - - [09/Jan/2017:22:29:57 +0100] "GET /posts/2/display HTTP/1.0" 200 3240
199.37.62.156 - - [09/Jan/2017:22:42:18 +0100] "GET /posts/1/display HTTP/1.0" 200 2477
200.19.168.148 - - [09/Jan/2017:22:57:11 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 3471
207.243.19.2 - - [09/Jan/2017:22:38:03 +0100] "GET /bar/create HTTP/1.0" 200 1116
225.219.54.140 - - [09/Jan/2017:22:35:30 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 500 2477
251.111.109.143 - - [09/Jan/2017:22:49:02 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 2477
55.74.240.123 - - [09/Jan/2017:22:44:25 +0100] "POST /posts/1/display HTTP/1.0" 200 3471
69.16.40.148 - - [09/Jan/2017:22:34:33 +0100] "GET /pages/create HTTP/1.0" 500 3471
75.113.188.234 - - [09/Jan/2017:22:30:43 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 1116

# You have a new challenge!
# Print the contents of access.log
# sorted.
# 
bash(0)> sort access.log 
101.163.230.250 - - [09/Jan/2017:22:52:31 +0100] "DELETE /posts/2/display HTTP/1.0" 404 2477
163.56.115.58 - - [09/Jan/2017:22:29:57 +0100] "GET /posts/2/display HTTP/1.0" 200 3240
199.37.62.156 - - [09/Jan/2017:22:42:18 +0100] "GET /posts/1/display HTTP/1.0" 200 2477
200.19.168.148 - - [09/Jan/2017:22:57:11 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 3471
207.243.19.2 - - [09/Jan/2017:22:38:03 +0100] "GET /bar/create HTTP/1.0" 200 1116
225.219.54.140 - - [09/Jan/2017:22:35:30 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 500 2477
251.111.109.143 - - [09/Jan/2017:22:49:02 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 2477
55.74.240.123 - - [09/Jan/2017:22:44:25 +0100] "POST /posts/1/display HTTP/1.0" 200 3471
69.16.40.148 - - [09/Jan/2017:22:34:33 +0100] "GET /pages/create HTTP/1.0" 500 3471
75.113.188.234 - - [09/Jan/2017:22:30:43 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 1116
# 👍 👍 👍  Correct!
# You have a new challenge!



# Print the number of lines
# in access.log that contain the string
# "GET".
# 
bash(0)> grep GET access.log | wc -l 
8
# 👍 👍 👍  Correct!



# You have a new challenge!
# The file split-me.txt contains a list of
# numbers separated by a ';' character.
# Split the numbers on the ';' character,
# one number per line.

