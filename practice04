https://www.techspot.com/guides/835-linux-command-line-basics/
https://www.codecademy.com/learn/learn-the-command-line

nano hello.txt

This will open the nano text editor.
 
https://www.techspot.com/guides/835-linux-command-line-basics/
http://www.informit.com/blogs/blog.aspx?b=2e1a39cd-e73b-4f8d-82f2-5f9b769132e1


Attica
Attica, a clothing store, has asked you to help them configure their environment.

If you get stuck during this project, check out the project walkthrough video which can be found at the bottom of the page after the final step of the project.

Tasks
18/18Complete
Mark the tasks as complete by checking them off
1.
Print the working directory.

pwd
2.
Create and open a file in nano called hello.txt.

nano hello.txt
3.
Save the string, "Hello, I am nano" in hello.txt.

Save the file, exit nano, and clear the terminal.

"Hello, I am nano"
Ctrl + O 
Enter
Ctrl + X
4.
Use nano to open the bash profile.

nano ~/.bash_profile
5.
In the bash profile, add a greeting with the word "Hello" using the echo command. Save the file, exit nano, and clear the terminal.

echo "Hello"
6.
Use the source command to make the greeting available in the current session.

You should see the greeting you created.

source ~/.bash_profile
7.
Open the bash profile, and create two aliases, one for the pwd command and one for the ls -la command.

Save the file, exit nano, and clear the terminal.

alias p="pwd"
alias ll="ls -la"
8.
Use the source command to make the aliases available in the current session.

9.
Test out the aliases you created for the pwd and ls -la command.

p
ll
10.
Open the bash profile and create and export the USER environment variable, setting it equal to your name.

Save the file, exit nano, and clear the terminal.

export USER="Bana"
11.
Echo the USER variable.

echo $USER
12.
Open the bash profile and create and export the PS1 environment variable, setting it equal to ">> ".

Save the file, exit nano, and clear the terminal.

export PS1=">> "
13.
Use the source command to make the prompt available in the current session.

14.
Test out the prompt by typing the two aliases you created earlier.

p
ll
15.
Echo the HOME variable.

echo $HOME
16.
Echo the PATH variable.

echo $PATH
17.
Return a list of environment variables.

env



nano ~/.bash_profile

echo "Hello, Hola, Ni Hao, Bonjour, and Kon'nichiwa! Welcome to our translation services"
Ctrl + O
Enter
Ctrl + X




Lingua Franca
Lingua Franca, a translation service, has asked you to help them configure their environment.

If you get stuck during this project, check out the project walkthrough video which can be found at the bottom of the page 
after the final step of the project.

Tasks
17/17Complete

Mark the tasks as complete by checking them off

1.
Print the working directory.

pwd

2.
Create and open the bash profile.

nano ~/.bash_profile

3.
In the bash profile, add a greeting of your choice.

Save the bash profile, exit nano, and clear the terminal window.

echo "Hello, Hola, Ni Hao, Bonjour, and Kon'nichiwa! Welcome to our translation services"
Ctrl + O  保存文件
Enter
Ctrl + X  退出文件

4.
Source the bash profile to make the greeting available in the current session. You should see the greeting you creating in the above step.

source ~/.bash_profile

5.
Open the bash profile, and create three aliases, one for the mkdir command, one for date, and one for history.

Save the bash profile, exit nano, and clear the terminal window.

alias md="mkdir"
alias d="date"
alias hy="history"

6.
Source the bash profile to make the aliases available in the current session.

source ~/.bash_profile

7.
Test out the aliases you created for the mkdir, date, and history commands. (Recall that when you test out the alias for mkdir you will need to pass in a directory name as an argument such as translations.)

md translations
d
hy

8.
Type the less command, with the filename javanese.txt. After you do this, type q to quit.

The less command is similar to cat, but is better adapted to handling larger files. It displays files in the terminal one page at a time.

less javanese.txt
q

9.
The less command is a special command that we can configure in the bash profile through the LESS environment variable.

Open the bash profile, and create and export a new environment variable called LESS, setting it equal to the option "-N". 
The -N option adds line numbers to the file.

Save the bash profile, exit nano, and clear the terminal window.

export LESS="-N"

10.
Source the bash profile to make the LESS line number option available for the current session.

source ~/.bash_profile

11.
Type the less command again now, with the filename javanese.txt. The file should appear, along with line numbers. Press q to quit.

less javanese.txt
q

12.
Open the bash profile. Create and export the PS1 environment variable, setting it equal to a prompt of your choice. Be sure to leave a space before the close of the quotations.

Save the bash profile, exit nano, and clear the terminal window.

export PS1="c[○┬●]כ "

13.
Source the bash profile to make the new prompt available in the current session.

source ~/.bash_profile

14.
Test out the prompt by typing the names of the aliases you created.

md script
d
hy

15.
Return a list of environment variables.

env

16.
Last but not least, return the value for the environment variable for LESS.

env | grep LESS



Bash Profile
You created a file in nano called ~/.bash_profile and added a greeting. How does this work?

$ nano ~/.bash_profile
~/.bash_profile is the name of file used to store environment settings. It is commonly called the "bash profile". When a session starts, it will load the contents of the bash profile before executing commands.

The ~ represents the user's home directory.
The . indicates a hidden file.
The name ~/.bash_profile is important, since this is how the command line recognizes the bash profile.
The command nano ~/.bash_profile opens up ~/.bash_profile in nano.
The text echo "Welcome, Jane Doe" creates a greeting in the bash profile, which is saved. It tells the command line to echo the string "Welcome, Jane Doe" when a terminal session begins.
The command source ~/.bash_profile activates the changes in ~/.bash_profile for the current session. Instead of closing the terminal and needing to start a new session, source makes the changes available right away in the session we are in.
Instructions
1.
Now that we know what bash profile is, let's continue configuring the environment by adding command aliases.

Open ~/.bash_profile in nano.

2.
In ~/.bash_profile, beneath the greeting you created, type

alias pd="pwd"
Save the file.

Press Enter to write the filename

Exit nano.

Clear the terminal window.

3.
In the command line, use the source command to activate the changes in the current session.

source ~/.bash_profile
4.
Let's try out the alias. Type

pd
You should see the same output as you would by typing the pwd command.




Aliases I
What happens when you store this alias in ~/.bash_profile?

alias pd="pwd"
The alias command allows you to create keyboard shortcuts, or aliases, for commonly used commands.

Here alias pd="pwd" creates the alias pd for the pwd command, which is then saved in the bash profile. Each time you enter pd, the output will be the same as the pwd command.
The command source ~/.bash_profile makes the alias pd available in the current session.
Each time we open up the terminal, we can use the pd alias.

Instructions

1.
Let's practice aliases some more. Open ~/.bash_profile in nano.

2.
In the bash profile, beneath the previous alias, add

alias hy="history"
Save the file.

Press Enter to write the filename.

3.
Add another alias

alias ll="ls -la"
Save the file.

Press Enter to write the filename.

Exit nano

Clear the terminal window.

4.
In the command line, use source to activate the changes to the bash profile for the current session.

5.
Let's try out the aliases. In the command line, type

hy

6.
Now type

ll



Aliases II
What happens when you store the following aliases in ~/.bash_profile?

alias hy="history"
hy is set as alias for the history command in the bash profile. The alias is then made available in the current session through source. By typing hy, the command line outputs a history of commands that were entered in the current session.

alias ll="ls -la"
ll is set as an alias for ls -la and made available in the current session through source. By typing ll, the command line now outputs all contents and directories in long format, including all hidden files.

Instructions
1.
Now that you are familiar with configuring greetings and aliases, let's move on to setting environment variables.

Open ~/.bash_profile in nano.

2.
In the bash profile, beneath the aliases, on a new line, type

export USER="Jane Doe"
Feel free to use your own name.  // USER="Jane Doe" 修改使用者

Save the file.

Press Enter to write the filename.

Exit nano.

Finally, clear the terminal.

3.
In the command line, use source to activate the changes in the bash profile for the current session. 

4.
Type

echo $USER  // 查询出修改的使用者
This should return the value of the variable that you set.

(Tip: If you are unable to type $, you can find help here.)


nano ~/.bash_profile  编辑文件



Environment Variables
What happens when you store this in ~/.bash_profile?

export USER="Jane Doe"
environment variables are variables that can be used across commands and programs and hold information about the environment.

The line USER="Jane Doe" sets the environment variable USER to a name "Jane Doe". Usually the USER variable is set to the name of the computer's owner.
The line export makes the variable to be available to all child sessions initiated from the session you are in. This is a way to make the variable persist across programs.
At the command line, the command echo $USER returns the value of the variable. Note that $ is always used when returning a variable's value. Here, the command echo $USER returns the name set for the variable.
Instructions
1.
Let's learn a few more environment variables, starting with the variable for the command prompt.

Open ~/.bash_profile in nano.


nano ~/.bash_profile  编辑文件

2.
On a new line, beneath the last entry, type

export PS1=">> "
Save the file.

Press Enter to write the filename.

Exit nano

Finally, clear the terminal window.

3.
In the command line, use source to activate the changes in the bash profile for the current shell session.

4.
Let's try out the new command prompt. In the terminal type

echo "hello"

5.
Now type

ls -alt
Did you notice that the prompt has changed?


