找到在1个小时内被更改的文件
想要通过文件修改时间找出文件，可以使用参数 -mmin -mtime。下面是man手册中有关mmin和mtime的定义。

-mmin n 文件最后一次修改是在n分钟之内
-mtime n 文件最后一次修改是在 n*24小时之内（译者注：也就是n天了呗）
执行下面例子中的命令，将会找到当前目录以及其子目录下，最近一次修改时间在1个小时（60分钟）之内的文件或目录

# find . -mmin -60
同样的方式，执行下面例子中的命令，将会找到24小时（1天）内修改了的文件（文件系统根目录 / 下）

# find / -mtime -1

找到1个小时内被访问过的文件
想要通过文件访问时间找出文件，可以使用参数 -amin -atime。下面是man手册中有关amin和atime的定义。

-amin n 文件最后一次访问是在n分钟之内
-atime n 文件最后一次访问是在 n*24小时之内
执行下面例子中的命令，将会找到当前目录以及其子目录下，最近一次访问时间在1个小时（60分钟）之内的文件或目录

# find . -amin -60
同样的方式，执行下面例子中的命令，将会找到24小时（1天）内被访问了的文件（文件系统根目录 / 下）

# find / -atime -1

在find命令输出上使用 ls -l， 列举出1小时内被编辑过的文件的详细信息
# find -mmin -60
./cron
./secure

 
例10：仅仅在当前文件系统中搜索
系统管理员有时候仅仅想在/挂载的文件系统分区上搜索，而不想去搜索其他的挂载分区，比如/home/挂载分区。
如果你有多个分区被挂载了，你想在/下搜索，一般可以按下面的这样做

下面这个命令会搜索根目录/及其子目录下所有.log结尾的文件名。如果你有多个分区在/下面，那么这个搜索会去搜索所有的被挂载的分区：

# find / -name "*.log"
如果我们使用-xdev选项，那么仅仅会在在当前文件系统中搜索，下面是在xdev的man page上面找到的一段-xdev的定义：
-xdev Don’t descend directories on other filesystems.
下面的命令会在/目录及其子目录下搜索当前文件系统(也就是/挂载的文件系统)中所有以.log结尾的文件，也就是说如果你有多个分区挂载在/下面，
下面的搜索不会去搜索其他的分区的（比如/home/）

# find / -xdev -name "*.log"


仅仅在当前文件系统中搜索
 
下面这个命令会搜索根目录/及其子目录下所有.log结尾的文件名。如果你有多个分区在/下面，那么这个搜索会去搜索所有的被挂载的分区：

# find / -name "*.log"



一旦连接了多个系统，用户就可以如下在系统 Z、X 和 Y 上执行 uname -n 命令（来显示节点名）：

$ uname -n
Z
$ ~!uname -n
X
$ ~~!uname -n
Y

 



uname TOP VIEW_AS_PAGE
As its man page says, uname prints out various system information. In the simplest form:
$ uname
Linux

If you use the -a flag for all, you get all sorts of information:
$ uname -a
 

 ls -lih
 Linux 文件或目录的属性主要包括：文件或目录的节点、种类、权限模式、链接数量、所归属的用户和用户组、最近访问或修改的时间等内容。
 
 


